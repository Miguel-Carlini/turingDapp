{"ast":null,"code":"var _jsxFileName = \"/home/miguel/Documentos/moddApptut/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState, useCallback } from \"react\";\nimport { ethers } from \"ethers\";\nimport TokenArtifact from \"./artifacts/contracts/TuringToken.sol/TuringToken.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = \"0x5fbdb2315678afecb367f032d93f642f64180aa3\"; // Endereço do contrato\n\nconst contractABI = TokenArtifact.abi;\nexport default function TuringDapp() {\n  _s();\n\n  const [contract, setContract] = useState(null);\n  const [codename, setCodename] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [ranking, setRanking] = useState([]);\n  const [account, setAccount] = useState(null); // Estado para armazenar a conta conectada\n  // Função para conectar ao MetaMask\n\n  const connectMetaMask = async () => {\n    if (window.ethereum) {\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = web3Provider.getSigner();\n        setAccount(accounts[0]);\n        setContract(new ethers.Contract(contractAddress, contractABI, signer));\n      } catch (error) {\n        console.error(\"Erro ao conectar ao MetaMask:\", error);\n        alert(\"Falha ao conectar ao MetaMask. Tente novamente.\");\n      }\n    } else {\n      console.error(\"MetaMask não encontrado. Instale o MetaMask.\");\n      alert(\"MetaMask não encontrado. Instale o MetaMask.\");\n    }\n  };\n\n  useEffect(() => {\n    if (window.ethereum) {\n      const checkAccount = async () => {\n        const accounts = await window.ethereum.request({\n          method: \"eth_accounts\"\n        });\n\n        if (accounts.length > 0) {\n          setAccount(accounts[0]);\n          const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n          const signer = web3Provider.getSigner();\n          setContract(new ethers.Contract(contractAddress, contractABI, signer));\n        }\n      };\n\n      checkAccount();\n    }\n  }, []);\n  const updateRanking = useCallback(async () => {\n    if (contract) {\n      try {\n        // Buscando todos os codinomes do contrato\n        const names = await contract.getAllNames(); // Pegando os votos para cada codiname\n\n        const rankingData = await Promise.all(names.map(async codiname => {\n          const votes = await contract.getTuringsForCodiname(codiname);\n          return {\n            codiname,\n            votes: ethers.utils.formatUnits(votes, 18)\n          }; // Convertendo os votos para o formato legível\n        })); // Ordenando os codinomes pelo número de votos\n\n        const ranked = rankingData.sort((a, b) => b.votes - a.votes);\n        setRanking(ranked);\n      } catch (error) {\n        console.error(\"Erro ao atualizar ranking:\", error);\n      }\n    }\n  }, [contract]);\n  useEffect(() => {\n    if (contract) {\n      // Atualizar o ranking quando o contrato for configurado\n      updateRanking();\n\n      const handleVoteCast = (voter, amount) => {\n        console.log(`Vote lançado por ${voter}: ${amount} Turings`);\n        updateRanking();\n      };\n\n      const handleTokenEmitido = (voter, codiname, amount) => {\n        console.log(`Token emitido para ${codiname} por ${voter}: ${ethers.utils.formatUnits(amount, 18)} Turings`);\n      };\n\n      const handleRecompensaEmitida = (voter, amount) => {\n        console.log(`Recompensa de ${ethers.utils.formatUnits(amount, 18)} Turings emitida para ${voter}`);\n      };\n\n      const handleCodinomeAutorizado = (account, codiname) => {\n        console.log(`Codinome autorizado: ${codiname} para ${account}`);\n      };\n\n      const handleVotacaoAtiva = () => {\n        console.log(\"A votação foi ativada.\");\n        setVotingEnabled(true);\n      };\n\n      const handleVotacaoDesativada = () => {\n        console.log(\"A votação foi desativada.\");\n        setVotingEnabled(false);\n      }; // Removing old event listeners and adding new ones\n\n\n      contract.off(\"VotoEmitido\", handleVoteCast);\n      contract.on(\"VotoEmitido\", handleVoteCast);\n      contract.off(\"TokenEmitido\", handleTokenEmitido);\n      contract.on(\"TokenEmitido\", handleTokenEmitido);\n      contract.off(\"RecompensaEmitida\", handleRecompensaEmitida);\n      contract.on(\"RecompensaEmitida\", handleRecompensaEmitida);\n      contract.off(\"CodinomeAutorizado\", handleCodinomeAutorizado);\n      contract.on(\"CodinomeAutorizado\", handleCodinomeAutorizado);\n      contract.off(\"VotacaoJaAtiva\", handleVotacaoAtiva);\n      contract.on(\"VotacaoJaAtiva\", handleVotacaoAtiva);\n      contract.off(\"VotacaoJaDesativada\", handleVotacaoDesativada);\n      contract.on(\"VotacaoJaDesativada\", handleVotacaoDesativada);\n      return () => {\n        contract.off(\"VotoEmitido\", handleVoteCast);\n        contract.off(\"TokenEmitido\", handleTokenEmitido);\n        contract.off(\"RecompensaEmitida\", handleRecompensaEmitida);\n      };\n    }\n  }, [contract, updateRanking]);\n\n  const issueToken = async () => {\n    if (!codename || !amount) {\n      alert(\"Por favor, preencha os campos de Codename e Quantidade.\");\n      return;\n    }\n\n    if (contract && account) {\n      try {\n        const tx = await contract.issueToken(codename, ethers.utils.parseUnits(amount, 18));\n        await tx.wait();\n        alert(\"Token emitido com sucesso!\");\n      } catch (error) {\n        console.error(\"Erro ao emitir token:\", error);\n        alert(\"Falha ao emitir token. Verifique seu saldo e tente novamente.\");\n      }\n    }\n  };\n\n  const vote = async () => {\n    if (!codename || !amount) {\n      alert(\"Por favor, preencha os campos de Codename e Quantidade.\");\n      return;\n    }\n\n    if (contract && account) {\n      try {\n        const tx = await contract.vote(codename, ethers.utils.parseUnits(amount, 18));\n        await tx.wait();\n        alert(\"Voto registrado com sucesso!\");\n      } catch (error) {\n        console.error(\"Erro ao votar:\", error);\n        alert(\"Falha ao votar. Verifique seu saldo e tente novamente.\");\n      }\n    }\n  };\n\n  const votingOn = async () => {\n    if (contract && account) {\n      try {\n        const tx = await contract.votingOn();\n        await tx.wait();\n        alert(\"Votação ativada!\");\n      } catch (error) {\n        console.error(\"Erro ao ativar votação:\", error);\n        alert(\"Erro ao ativar a votação. Tente novamente.\");\n      }\n    }\n  };\n\n  const votingOff = async () => {\n    if (contract && account) {\n      try {\n        const votingStatus = await contract.votingEnabled();\n\n        if (!votingStatus) {\n          alert(\"A votação já está desativada.\");\n          return;\n        }\n\n        const tx = await contract.votingOff();\n        await tx.wait();\n        alert(\"Votação desativada!\");\n      } catch (error) {\n        console.error(\"Erro ao desativar votação:\", error);\n        alert(\"Erro ao desativar a votação. Tente novamente.\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-3xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Turing Token DApp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this), !account ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectMetaMask,\n      className: \"px-4 py-2 bg-blue-500 text-white rounded\",\n      children: \"Conectar ao MetaMask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Conta conectada:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 24\n        }, this), \" \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Codename\",\n        value: codename,\n        onChange: e => setCodename(e.target.value),\n        className: \"p-2 border rounded w-full mb-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Quantidade\",\n        value: amount,\n        onChange: e => setAmount(e.target.value),\n        className: \"p-2 border rounded w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: issueToken,\n        className: \"px-4 py-2 bg-blue-500 text-white rounded\",\n        children: \"Emitir Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: vote,\n        className: \"px-4 py-2 bg-green-500 text-white rounded\",\n        children: \"Votar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: votingOn,\n        className: \"px-4 py-2 bg-yellow-500 text-white rounded\",\n        children: \"Ativar Vota\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: votingOff,\n        className: \"px-4 py-2 bg-red-500 text-white rounded\",\n        children: \"Desativar Vota\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold\",\n        children: \"Ranking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table-auto w-full border-collapse mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 border\",\n              children: \"Codinome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 border\",\n              children: \"Votos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: ranking.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2 border\",\n              children: entry.codiname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2 border\",\n              children: entry.votes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TuringDapp, \"2HQsxaT8oyHd4rQ2K6JUZvplcHI=\");\n\n_c = TuringDapp;\n\nvar _c;\n\n$RefreshReg$(_c, \"TuringDapp\");","map":{"version":3,"sources":["/home/miguel/Documentos/moddApptut/src/App.js"],"names":["useEffect","useState","useCallback","ethers","TokenArtifact","contractAddress","contractABI","abi","TuringDapp","contract","setContract","codename","setCodename","amount","setAmount","ranking","setRanking","account","setAccount","connectMetaMask","window","ethereum","accounts","request","method","web3Provider","providers","Web3Provider","signer","getSigner","Contract","error","console","alert","checkAccount","length","updateRanking","names","getAllNames","rankingData","Promise","all","map","codiname","votes","getTuringsForCodiname","utils","formatUnits","ranked","sort","a","b","handleVoteCast","voter","log","handleTokenEmitido","handleRecompensaEmitida","handleCodinomeAutorizado","handleVotacaoAtiva","setVotingEnabled","handleVotacaoDesativada","off","on","issueToken","tx","parseUnits","wait","vote","votingOn","votingOff","votingStatus","votingEnabled","e","target","value","entry","index"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useEffect, useState, useCallback } from \"react\";\nimport { ethers } from \"ethers\";\nimport TokenArtifact from \"./artifacts/contracts/TuringToken.sol/TuringToken.json\";\n\nconst contractAddress = \"0x5fbdb2315678afecb367f032d93f642f64180aa3\"; // Endereço do contrato\nconst contractABI = TokenArtifact.abi;\n\nexport default function TuringDapp() {\n    const [contract, setContract] = useState(null);\n    const [codename, setCodename] = useState(\"\");\n    const [amount, setAmount] = useState(\"\");\n    const [ranking, setRanking] = useState([]);\n    const [account, setAccount] = useState(null); // Estado para armazenar a conta conectada\n\n    // Função para conectar ao MetaMask\n    const connectMetaMask = async () => {\n        if (window.ethereum) {\n            try {\n                const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\n                const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n                const signer = web3Provider.getSigner();\n                setAccount(accounts[0]);\n                setContract(new ethers.Contract(contractAddress, contractABI, signer));\n            } catch (error) {\n                console.error(\"Erro ao conectar ao MetaMask:\", error);\n                alert(\"Falha ao conectar ao MetaMask. Tente novamente.\");\n            }\n        } else {\n            console.error(\"MetaMask não encontrado. Instale o MetaMask.\");\n            alert(\"MetaMask não encontrado. Instale o MetaMask.\");\n        }\n    };\n\n    useEffect(() => {\n        if (window.ethereum) {\n            const checkAccount = async () => {\n                const accounts = await window.ethereum.request({ method: \"eth_accounts\" });\n                if (accounts.length > 0) {\n                    setAccount(accounts[0]);\n                    const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n                    const signer = web3Provider.getSigner();\n                    setContract(new ethers.Contract(contractAddress, contractABI, signer));\n                }\n            };\n            checkAccount();\n        }\n    }, []);\n\n    const updateRanking = useCallback(async () => {\n        if (contract) {\n            try {\n                // Buscando todos os codinomes do contrato\n                const names = await contract.getAllNames();\n\n                // Pegando os votos para cada codiname\n                const rankingData = await Promise.all(\n                    names.map(async (codiname) => {\n                        const votes = await contract.getTuringsForCodiname(codiname);\n                        return { codiname, votes: ethers.utils.formatUnits(votes, 18) }; // Convertendo os votos para o formato legível\n                    })\n                );\n\n                // Ordenando os codinomes pelo número de votos\n                const ranked = rankingData.sort((a, b) => b.votes - a.votes);\n                setRanking(ranked);\n            } catch (error) {\n                console.error(\"Erro ao atualizar ranking:\", error);\n            }\n        }\n    }, [contract]);\n    \n    useEffect(() => {\n        if (contract) {\n            // Atualizar o ranking quando o contrato for configurado\n            updateRanking();\n\n            const handleVoteCast = (voter, amount) => {\n                console.log(`Vote lançado por ${voter}: ${amount} Turings`);\n                updateRanking();\n            };\n\n            const handleTokenEmitido = (voter, codiname, amount) => {\n                console.log(`Token emitido para ${codiname} por ${voter}: ${ethers.utils.formatUnits(amount, 18)} Turings`);\n            };\n\n            const handleRecompensaEmitida = (voter, amount) => {\n                console.log(`Recompensa de ${ethers.utils.formatUnits(amount, 18)} Turings emitida para ${voter}`);\n            };\n\n            const handleCodinomeAutorizado = (account, codiname) => {\n                console.log(`Codinome autorizado: ${codiname} para ${account}`);\n            };\n\n            const handleVotacaoAtiva = () => {\n                console.log(\"A votação foi ativada.\");\n                setVotingEnabled(true);\n            };\n\n            const handleVotacaoDesativada = () => {\n                console.log(\"A votação foi desativada.\");\n                setVotingEnabled(false);\n            };\n\n            \n            // Removing old event listeners and adding new ones\n            contract.off(\"VotoEmitido\", handleVoteCast); \n            contract.on(\"VotoEmitido\", handleVoteCast);\n\n            contract.off(\"TokenEmitido\", handleTokenEmitido);\n            contract.on(\"TokenEmitido\", handleTokenEmitido);\n\n            contract.off(\"RecompensaEmitida\", handleRecompensaEmitida); \n            contract.on(\"RecompensaEmitida\", handleRecompensaEmitida);\n\n            contract.off(\"CodinomeAutorizado\", handleCodinomeAutorizado); \n            contract.on(\"CodinomeAutorizado\", handleCodinomeAutorizado);\n\n            contract.off(\"VotacaoJaAtiva\", handleVotacaoAtiva); \n            contract.on(\"VotacaoJaAtiva\", handleVotacaoAtiva);\n\n            contract.off(\"VotacaoJaDesativada\", handleVotacaoDesativada); \n            contract.on(\"VotacaoJaDesativada\", handleVotacaoDesativada);\n\n            return () => {\n                contract.off(\"VotoEmitido\", handleVoteCast);\n                contract.off(\"TokenEmitido\", handleTokenEmitido);\n                contract.off(\"RecompensaEmitida\", handleRecompensaEmitida);\n            };\n        }\n    }, [contract, updateRanking]);\n\n    const issueToken = async () => {\n        if (!codename || !amount) {\n            alert(\"Por favor, preencha os campos de Codename e Quantidade.\");\n            return;\n        }\n\n        if (contract && account) {\n            try {\n                const tx = await contract.issueToken(codename, ethers.utils.parseUnits(amount, 18));\n                await tx.wait();\n                alert(\"Token emitido com sucesso!\");\n            } catch (error) {\n                console.error(\"Erro ao emitir token:\", error);\n                alert(\"Falha ao emitir token. Verifique seu saldo e tente novamente.\");\n            }\n        }\n    };\n\n    const vote = async () => {\n        if (!codename || !amount) {\n            alert(\"Por favor, preencha os campos de Codename e Quantidade.\");\n            return;\n        }\n\n        if (contract && account) {\n            try {\n                const tx = await contract.vote(codename, ethers.utils.parseUnits(amount, 18));\n                await tx.wait();\n                alert(\"Voto registrado com sucesso!\");\n            } catch (error) {\n                console.error(\"Erro ao votar:\", error);\n                alert(\"Falha ao votar. Verifique seu saldo e tente novamente.\");\n            }\n        }\n    };\n\n    const votingOn = async () => {\n        if (contract && account) {\n            try {\n                const tx = await contract.votingOn();\n                await tx.wait();\n                alert(\"Votação ativada!\");\n            } catch (error) {\n                console.error(\"Erro ao ativar votação:\", error);\n                alert(\"Erro ao ativar a votação. Tente novamente.\");\n            }\n        }\n    };\n\n    const votingOff = async () => {\n        if (contract && account) {\n            try {\n                const votingStatus = await contract.votingEnabled(); \n                if (!votingStatus) {\n                    alert(\"A votação já está desativada.\");\n                    return;\n                }\n                const tx = await contract.votingOff();\n                await tx.wait();\n                alert(\"Votação desativada!\");\n            } catch (error) {\n                console.error(\"Erro ao desativar votação:\", error);\n                alert(\"Erro ao desativar a votação. Tente novamente.\");\n            }\n        }\n    };    \n\n    return (\n        <div className=\"p-6 max-w-3xl mx-auto\">\n            <h2 className=\"text-2xl font-bold mb-4\">Turing Token DApp</h2>\n\n            {!account ? (\n                <button\n                    onClick={connectMetaMask}\n                    className=\"px-4 py-2 bg-blue-500 text-white rounded\"\n                >\n                    Conectar ao MetaMask\n                </button>\n            ) : (\n                <div>\n                    <p><strong>Conta conectada:</strong> {account}</p>\n                </div>\n            )}\n\n            <div className=\"mb-4\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Codename\"\n                    value={codename}\n                    onChange={(e) => setCodename(e.target.value)}\n                    className=\"p-2 border rounded w-full mb-2\"\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Quantidade\"\n                    value={amount}\n                    onChange={(e) => setAmount(e.target.value)}\n                    className=\"p-2 border rounded w-full\"\n                />\n            </div>\n\n            <div className=\"flex flex-wrap gap-4\">\n                <button onClick={issueToken} className=\"px-4 py-2 bg-blue-500 text-white rounded\">\n                    Emitir Token\n                </button>\n                <button onClick={vote} className=\"px-4 py-2 bg-green-500 text-white rounded\">\n                    Votar\n                </button>\n                <button onClick={votingOn} className=\"px-4 py-2 bg-yellow-500 text-white rounded\">\n                    Ativar Votação\n                </button>\n                <button onClick={votingOff} className=\"px-4 py-2 bg-red-500 text-white rounded\">\n                    Desativar Votação\n                </button>\n            </div>\n\n            <div className=\"mt-6\">\n                <h3 className=\"text-lg font-semibold\">Ranking</h3>\n                <table className=\"table-auto w-full border-collapse mt-4\">\n                    <thead>\n                        <tr>\n                            <th className=\"px-4 py-2 border\">Codinome</th>\n                            <th className=\"px-4 py-2 border\">Votos</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {ranking.map((entry, index) => (\n                            <tr key={index}>\n                                <td className=\"px-4 py-2 border\">{entry.codiname}</td>\n                                <td className=\"px-4 py-2 border\">{entry.votes}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}