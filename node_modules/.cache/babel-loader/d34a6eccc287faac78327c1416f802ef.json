{"ast":null,"code":"var _jsxFileName = \"/home/miguel/Documentos/moddApptut/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { ethers } from 'ethers';\nimport { useState } from 'react';\nimport TokenArtifact from \"./artifacts/contracts/KevinToken.sol/KevinToken.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tokenAddress = \"0x5fbdb2315678afecb367f032d93f642f64180aa3\";\nconst localBlockchainAddress = 'http://localhost:8545';\n\nfunction App() {\n  _s();\n\n  const [tokenData, setTokenData] = useState({});\n  const [amount, setAmount] = useState();\n  const provider = new ethers.providers.JsonRpcProvider(localBlockchainAddress);\n  const signer = provider.getSigner();\n\n  async function _intializeContract(init) {\n    const contract = new ethers.Contract(tokenAddress, TokenArtifact.abi, init);\n    return contract;\n  }\n\n  async function _getTokenData() {\n    const contract = await _intializeContract(signer);\n    const name = await contract.name();\n    const symbol = await contract.symbol();\n    const tokenData = {\n      name,\n      symbol\n    };\n    setTokenData(tokenData);\n  }\n\n  async function getBalance() {\n    if (typeof window.ethereum !== 'undefined') {\n      const contract = await _intializeContract(signer);\n      const [account] = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const balance = await contract.balanceOf(account);\n      console.log(\"Account Balance: \", balance.toString());\n    }\n  }\n\n  async function issueToken() {\n    const contract = await _intializeContract(signer);\n    await contract.functions.issueToken(amount);\n    console.log('Issue token successfull');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: issueToken,\n        children: \"issueToken\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setAmount(e.target.value),\n        placeholder: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: _getTokenData,\n        children: \"get token data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getBalance,\n        children: \"Get Balance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: tokenData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: tokenData.symbol\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"CqAqexJRFSK/fLLRROz3SpZfUe8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/miguel/Documentos/moddApptut/src/App.js"],"names":["ethers","useState","TokenArtifact","tokenAddress","localBlockchainAddress","App","tokenData","setTokenData","amount","setAmount","provider","providers","JsonRpcProvider","signer","getSigner","_intializeContract","init","contract","Contract","abi","_getTokenData","name","symbol","getBalance","window","ethereum","account","request","method","balance","balanceOf","console","log","toString","issueToken","functions","e","target","value"],"mappings":"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","sourcesContent":["import './App.css';\nimport { ethers } from 'ethers'\nimport { useState } from 'react';\nimport TokenArtifact from \"./artifacts/contracts/KevinToken.sol/KevinToken.json\"\nconst tokenAddress = \"0x5fbdb2315678afecb367f032d93f642f64180aa3\"\n\nconst localBlockchainAddress = 'http://localhost:8545'\n\nfunction App() {\n    const [tokenData, setTokenData] = useState({})\n    const [amount, setAmount] = useState()\n\n    const provider = new ethers.providers.JsonRpcProvider(localBlockchainAddress)\n    const signer = provider.getSigner();\n\n    async function _intializeContract(init) {\n        const contract = new ethers.Contract(\n            tokenAddress,\n            TokenArtifact.abi,\n            init\n        );\n\n        return contract\n    }\n\n    async function _getTokenData() {\n        const contract = await _intializeContract(signer)\n\n        const name = await contract.name();\n        const symbol = await contract.symbol();\n        const tokenData = { name, symbol }\n\n        setTokenData(tokenData);\n    }\n\n    async function getBalance() {\n        if (typeof window.ethereum !== 'undefined') {\n            const contract = await _intializeContract(signer)\n            const [account] = await window.ethereum.request({ method: 'eth_requestAccounts' })\n            const balance = await contract.balanceOf(account);\n            console.log(\"Account Balance: \", balance.toString());\n        }\n    }\n\n    async function issueToken() {\n        const contract = await _intializeContract(signer)\n        await contract.functions.issueToken(amount)\n        console.log('Issue token successfull')\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <button onClick={issueToken}>issueToken</button>\n                <br />\n                <input onChange={e => setAmount(e.target.value)} placeholder=\"Amount\" />\n                <br />\n                <button onClick={_getTokenData}>get token data</button>\n                <br />\n                <button onClick={getBalance}>Get Balance</button>\n                <br />\n                <h1>{tokenData.name}</h1>\n                <h1>{tokenData.symbol}</h1>\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}